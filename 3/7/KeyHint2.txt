- Seja SomaSubconjunto(A,n,S) a função que retorna um valor lógico
  indicando se a soma dos elementos de algum subconjunto de S[1..n]
  é igual a A.

- Considere que sejam dados os valores x e y correspondendo a valores
  lógicos indicando:

  x = Verdadeiro se a soma dos elementos de algum subconjunto de S[1..n-1]
  é igual a A.
  y = Verdadeiro se a soma dos elementos de algum subconjunto de S[1..n-1]
  é igual a A-S[n].

  A recursão pode lhe ajudar a obter tais valores.

- Note que, para que haja algum subconjunto de S[1..n] somando A, há duas
  formas:
  . Se S[n] não estiver em tal subconjunto, então é necessário que esse
    subconjunto seja subconjunto de S[1..n-1] somando A. O valor x 
    indica a existência de tal subconjunto.
  . Se S[n] estiver em tal subconjunto, então é necessário que esse
    subconjunto seja subconjunto de S[1..n-1] somando A-S[n]. O valor y 
    indica a existência de tal subconjunto.

  Portanto, SomaSubconjunto(A,n,S) = x ou y.

- Os casos em que A = 0 ou n = 0 devem ser tratados separadamente.

- Ao obter a recursão acima, atente para o fato de haver subproblemas
  repetidos; se for o caso, implemente a técnica de programação dinâmica.
  Empregue uma matriz Mem[0..n][0..A] para armazenar as saídas, onde Mem[i][j] 
  armazenará o valor lógico indicando se a soma dos elementos de algum 
  subconjunto de S[1..i] é igual a j.

- Note que preencher a matriz Mem de cima para baixo, da esquerda para a 
  direita, é uma ordem adequada para a programação dinâmica. 