- Seja SCM(S,n) a função que retorna a maior subsequência crescente
  máxima que termina no elemento S[n]. Note que a solução da subsequência
  crescente máxima corresponde ao valor 
  
  max{SCM(S,i) | 1 <= i <= n}

- Considere que sejam dados os valores x_1, x_2, ..., x_(n-1) 
  correspondendo aos tamanhos das maiores subsequências crescente que 
  terminam nos elementos S[1], S[2], ..., S[n-1], respectivamente.
  A recursão pode lhe ajudar a obter tais valores.

- Note que, a subsequência crescente máxima que termina em S[n] consiste
  da subsequência crescente máxima que termina em algum elemento 
  S[j] < S[n], para algum j < n, acrescida do elemento S[n]. Portanto,
  para todo n > 1, temos que:

  SCM(S,n) = max{SCM(S,j) + 1 | 1 <= j < n, S[j] < S[n]}.

- O caso em que n=1 deve ser tratado separadamente.

- Ao obter a recursão acima, atente para o fato de haver subproblemas
  repetidos; se for o caso, implemente a técnica de programação dinâmica.
  Empregue um vetor Mem[0..n-1] para armazenar as saídas, onde Mem[i] 
  armazenará a subsequência crescente máxima que termina em S[i].

- Note que preencher o vetor Mem da esquerda para a direita, é uma ordem 
  adequada para a programação dinâmica. 